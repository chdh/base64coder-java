<!-- Ant build file for base64coder Java version -->
<project name="base64Coder" default="buildAll">

<fail message="This buildfile requires at least Ant 1.8.">
 <condition>
  <not>
   <antversion atleast="1.8"/>
  </not>
 </condition>
</fail>

<property environment="env"/>

<property name="srcDir"                 location="src/main/java"/>
<property name="classesDir"             location="target/classes"/>
<property name="javaDocDir"             location="target/javadoc"/>
<property name="jarFile"                location="target/base64coder.jar"/>
<property name="testSrcDir"             location="src/test/java"/>
<property name="testClassesDir"         location="target/test-classes"/>
<property name="testReportsDir"         location="target/test-reports"/>
<property name="distribZipFile"         location="target/base64coder.zip"/>
<property name="jUnitVersionToDownload" value="4.7"/>

<target name="buildAll" description="Compiles, builds the JAR and generates the API docs."
   depends="buildJar, javaDoc"/>

<target name="buildJar" description="Compiles the main Java sources and builds the JAR file.">
 <delete dir="${classesDir}" failonerror="true"/>
 <mkdir dir="${classesDir}"/>
 <javac srcdir="${srcDir}" deprecation="true" includeAntRuntime="false" debug="true" debuglevel="lines,source"
    target="1.5" destdir="${classesDir}">
  <compilerarg line="-Xlint -Xmaxerrs 6"/>
 </javac>
 <jar destfile="${jarFile}">
  <fileset dir="${classesDir}"/>
 </jar>
 <delete dir="${classesDir}" failonerror="true"/>
</target>

<target name="compileTest" description="Compiles the test class." depends="getJUnitJar">
 <delete dir="${testClassesDir}" failonerror="true"/>
 <mkdir dir="${testClassesDir}"/>
 <!-- Note: The "Sun proprietary" warnings cannot be suppressed as of 2010-02. -->
 <javac srcdir="${testSrcDir}" deprecation="true" includeAntRuntime="false" debug="true" debuglevel="lines,source"
    target="1.5" destdir="${testClassesDir}">
  <compilerarg line="-Xlint -Xmaxerrs 6"/>
  <classpath>
   <pathelement location="${jUnitJar}"/>
   <pathelement location="${jarFile}"/>
  </classpath>
 </javac>
</target>

<target name="javaDoc" description="Generates the API documentation (JavaDoc)">
 <delete dir="${javaDocDir}" failonerror="true"/>
 <mkdir dir="${javaDocDir}"/>
 <javadoc sourcepath="${srcDir}" destdir="${javaDocDir}" failonerror="true"
      nodeprecatedlist="true" notree="true" noindex="true" nohelp="true" nonavbar="true"
      bottom="&lt;br&gt;&lt;span style='font-size: 10pt; font-family: Arial, Helvetica, sans-serif'&gt;Home page: &lt;a href='http://www.source-code.biz'&gt;http://www.source-code.biz&lt;/a&gt;&lt;/span&gt;">
 <!-- Because it's only a single HTML file, we move it out of the JavaDoc dir. -->
 </javadoc>
  <copy file="${javaDocDir}/biz/source_code/base64Coder/Base64Coder.html" todir="target"/>
  <replace dir="target" includes="Base64Coder.html">
   <replacefilter token="../../../biz/source_code/base64Coder/" value=""/>
   <replacefilter token="../../../" value=""/>
  </replace>
 <delete dir="${javaDocDir}" failonerror="true"/>
</target>

<target name="test" description="Runs the JUnit tests." depends="compileTest, getJUnitJar">
 <delete dir="${testReportsDir}" failonerror="true"/>
 <mkdir dir="${testReportsDir}"/>
 <junit haltonfailure="true">
  <classpath>
   <pathelement location="${jUnitJar}"/>
   <pathelement location="${jarFile}"/>
   <pathelement location="${testClassesDir}"/>
  </classpath>
  <formatter type="plain"/>
  <test name="TestBase64Coder" todir="${testReportsDir}"/>
 </junit>
</target>

<target name="getJUnitJar" depends="getJUnitJar2" unless="jUnitJar">
 <!-- Download the JUnit JAR file from the central Maven repository. -->
 <property name="jUnitJar" location="target/junit-${jUnitVersionToDownload}.jar"/>
 <get src="http://repo1.maven.org/maven2/junit/junit/${jUnitVersionToDownload}/junit-${jUnitVersionToDownload}.jar" dest="${jUnitJar}" skipexisting="true"/>
</target>
<target name="getJUnitJar2" unless="jUnitJar">
 <!-- The OS environment variable JUNIT_JAR can be set to the path name of the JUnit JAR file. -->
 <condition property="jUnitJar" value="${env.JUNIT_JAR}">
  <isset property="env.JUNIT_JAR"/>
 </condition>
</target>

<target name="buildDistribZip" description="Builds the distribution ZIP file." depends="buildAll">
 <delete file="${distribZipFile}"/>
 <zip destfile="${distribZipFile}">
  <zipfileset dir="." includes="build.xml, CHANGES.txt, README.txt, src/, target/base64coder.jar, target/Base64Coder.html"/>
 </zip>
</target>

<target name="updateWebsite" depends="buildAll, buildDistribZip">
 <property name="websiteDir" location="${env.base64CoderJavaWebsiteDir}"/>
 <copy todir="${websiteDir}" overwrite="true">
  <fileset dir="src" includes="**/*.java"/>
  <fileset dir="target" includes="Base64Coder.html, base64coder.jar"/>
  <fileset file="${distribZipFile}"/>
  <chainedmapper>
   <flattenmapper/>
   <mapper>
    <globmapper from="*.java" to="*.java.txt"/>
    <identitymapper/>
   </mapper>
  </chainedmapper>
 </copy>
</target>

</project>
